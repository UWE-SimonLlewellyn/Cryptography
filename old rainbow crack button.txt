HashMap pairs = start.getPairs();
        try {
            if (pairs.size() > 0) {
                String cypherText = hashText.getText();
                String result = "Not Found";
                long timer = System.currentTimeMillis();
                boolean match = false;
                int chainLength = start.chainLength;
                String hashedInput = cypherText, reduString = "", startOfChain = "";

                int pos = chainLength;
                int count = pos;
                while (count > 0) {
                    for (int i = pos; i > 0; i--) {
                        count--;
                        reduString = reduceMan.chainReduce(hashedInput, i, chainLength);
                        if (pairs.containsKey(reduString)) {
                            startOfChain = pairs.get(reduString).toString();
                            match = true;
                            pos = i;
                            break;
                        }
                        hashedInput = Sha_1.SHA1(reduString);
                    }
                    //
                    // Below recreated the chain from the starting position. 
                    //
                    String hashed = "";
                    String nextInChain = startOfChain;
                    if (match) {
                        match = false;
                        for (int i = 0; i <= chainLength; i++) {
                            hashed = Sha_1.SHA1(nextInChain);
                            if (hashed.equals(cypherText)) {
                                result = nextInChain;
                                count = 0;
                                break;
                            } else {
                                nextInChain = reduceMan.reduce(hashed, i);
                            }
                        }
                        hashedInput = Sha_1.SHA1(reduString);
                        if (count != 0) {
                            pos = count;
                        }
                    }
                }

//////////////////////////end crack code////////////////////////////////////////////////
                //times to complete in milliseconds
                timer = System.currentTimeMillis() - timer;
                //Conver time to minutes:seconds:milliseconds
                String times = new SimpleDateFormat("mm:ss:SSS").format(new Date(timer));
                //Display hash, decyrpted text and time in results box.
                results.setText("Hash:    " + cypherText + "\nDecryped: " + result + "\nRun Time:   "
                        + times + "\nAlphabet: " + start.alphabet + "\nMax password legnth: " + start.maxLength);
            } else {
                results.setText("No Table on file. Please create table.");
            }
        } catch (NoSuchAlgorithmException | UnsupportedEncodingException ex) {
            Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
        }